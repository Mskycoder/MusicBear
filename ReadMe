Available at:
https://musicbear.herokuapp.com/

HOW TO RUN:
Place .env .env.default in root
To run music bear, you need to run the script inside of the server folder 'npm start dev', which will run our API server and React server concurrently (CORS is enabled in our server.js file). Make sure you have the most recent stable version of Node.js, otherwise you might encounter errors with the server.

HOW TO USE:
Once you run the application, you should be able to access the homescreen at localhost:3000. Sign in/up buttons are on the top right. Once you are in the portfolio page, you can look up the an artist in the search bar (has to be one of the top 1000 most listened artists accoding to Last.fm's web API)and it will display the listener count history of that artist. Since the web API can only display the current number of listeners for any artist, we need to update it ourselves on the server. An example of how it would look like can be seen if you look up the artist --INSERT FAKE ARTIST-- for whom we've generated the data ourselves.
We update the database only daily since that's approximately how often the Last.fm web API updates (empirically determined). The point of the user system is so that in future implementations, we will give users the power to treat artists' listener count like stock prices and act as a clone of the stock trading market.

TECHNOLOGIES:
Yunke Xiao = [HTML/CSS, Javascript/DOM, React.js, JSON]
Peter Chen = [MongoDB, PUSH, heroku(serverside hosting?, Security(Encryption Username/Password)]


All the HTML/CSS and React.js code can be found in the src folder inside of the client folder.
